{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar capitalize = require( '@stdlib/string-capitalize' );\nvar lowercase = require( '@stdlib/string-lowercase' );\nvar replace = require( '@stdlib/string-replace' );\nvar format = require( '@stdlib/error-tools-fmtprodmsg' );\nvar trim = require( '@stdlib/string-trim' );\n\n\n// VARIABLES //\n\nvar RE_WHITESPACE = /\\s+/g;\nvar RE_SPECIAL = /[-!\"'(),â€“.:;<>?`{}|~\\/\\\\\\[\\]_#$*&^@%]+/g; // eslint-disable-line no-useless-escape\nvar RE_TO_PASCAL = /(?:\\s|^)([^\\s]+)(?=\\s|$)/g;\nvar RE_CAMEL = /([a-z0-9])([A-Z])/g;\n\n\n// FUNCTIONS //\n\n/**\n* Callback invoked upon a match.\n*\n* @private\n* @param {string} match - entire match\n* @param {string} p1 - first capture group\n* @returns {string} capitalized capture group\n*/\nfunction replacer( match, p1 ) {\n\treturn capitalize( lowercase( p1 ) );\n}\n\n\n// MAIN //\n\n/**\n* Converts a string to Pascal case.\n*\n* @param {string} str - string to convert\n* @throws {TypeError} must provide a string primitive\n* @returns {string} Pascal-cased string\n*\n* @example\n* var out = pascalcase( 'foo bar' );\n* // returns 'FooBar'\n*\n* @example\n* var out = pascalcase( 'IS_MOBILE' );\n* // returns 'IsMobile'\n*\n* @example\n* var out = pascalcase( 'Hello World!' );\n* // returns 'HelloWorld'\n*\n* @example\n* var out = pascalcase( '--foo-bar--' );\n* // returns 'FooBar'\n*/\nfunction pascalcase( str ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( '0hM3R', str ) );\n\t}\n\tstr = replace( str, RE_SPECIAL, ' ' );\n\tstr = replace( str, RE_WHITESPACE, ' ' );\n\tstr = replace( str, RE_CAMEL, '$1 $2' );\n\tstr = trim( str );\n\tstr = replace( str, RE_TO_PASCAL, replacer );\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = pascalcase;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert a string to Pascal case.\n*\n* @module @stdlib/string-pascalcase\n*\n* @example\n* var pascalcase = require( '@stdlib/string-pascalcase' );\n*\n* var str = pascalcase( 'foo bar' );\n* // returns 'FooBar'\n*\n* str = pascalcase( '--foo-bar--' );\n* // returns 'FooBar'\n*\n* str = pascalcase( 'Hello World!' );\n* // returns 'HelloWorld'\n*/\n\n// MODULES //\n\nvar pascalcase = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = pascalcase;\n"],"names":["isString","require$$0","isPrimitive","capitalize","require$$1","lowercase","require$$2","replace","require$$3","format","require$$4","trim","require$$5","RE_WHITESPACE","RE_SPECIAL","RE_TO_PASCAL","RE_CAMEL","replacer","match","p1","lib","str","TypeError"],"mappings":";;wfAsBA,IAAIA,EAAWC,EAAsCC,YACjDC,EAAaC,EACbC,EAAYC,EACZC,EAAUC,EACVC,EAASC,EACTC,EAAOC,EAKPC,EAAgB,OAChBC,EAAa,0CACbC,EAAe,4BACfC,EAAW,qBAaf,SAASC,EAAUC,EAAOC,GACzB,OAAOhB,EAAYE,EAAWc,IA4C/B,IChDAC,EDiCA,SAAqBC,GACpB,IAAMrB,EAAUqB,GACf,MAAM,IAAIC,UAAWb,EAAQ,QAASY,IAOvC,OALAA,EAAMd,EAASc,EAAKP,EAAY,KAChCO,EAAMd,EAASc,EAAKR,EAAe,KACnCQ,EAAMd,EAASc,EAAKL,EAAU,SAC9BK,EAAMV,EAAMU,GACZA,EAAMd,EAASc,EAAKN,EAAcE"}